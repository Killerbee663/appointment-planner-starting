{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web dev projects\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    contacts,\n    value,\n    onChange,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChange,\n      value: value,\n      name: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No Contact Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), contacts.map((_ref2, index) => {\n        let {\n          name\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","contacts","value","onChange","name","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref2","index","_c","$RefreshReg$"],"sources":["G:/Web dev projects/appointment-planner-starting-v18/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = ({ contacts, value, onChange, name }) => {\r\n  return (\r\n    <>\r\n      <select\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n      >\r\n        <option value=\"\">No Contact Selected</option>\r\n        {contacts.map(({ name}, index) => (\r\n          <option\r\n            key={index}\r\n            value={name}\r\n          >\r\n            {name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAyC;EAAA,IAAxC;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAJ,IAAA;EAC/D,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MACEO,QAAQ,EAAEA,QAAS;MACnBD,KAAK,EAAEA,KAAM;MACbE,IAAI,EAAEA,IAAK;MAAAC,QAAA,gBAEXT,OAAA;QAAQM,KAAK,EAAC,EAAE;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAC5CR,QAAQ,CAACS,GAAG,CAAC,CAAAC,KAAA,EAAUC,KAAK;QAAA,IAAd;UAAER;QAAI,CAAC,GAAAO,KAAA;QAAA,oBACpBf,OAAA;UAEEM,KAAK,EAAEE,IAAK;UAAAC,QAAA,EAEXD;QAAI,GAHAQ,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIH;MAAA,CACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK,iBACR;AAEP,CAAC;AAACI,EAAA,GApBWd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}