{"ast":null,"code":"var _jsxFileName = \"G:\\\\Web dev projects\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointment, setAppointment] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const newContact = (name, phoneNumber, email) => {\n    const value = {\n      name,\n      phoneNumber,\n      email\n    };\n    setContacts(prev => [...contacts, value]);\n  };\n  const newAppointment = (name, contact, date, time) => {\n    const value = {\n      name,\n      contact,\n      date,\n      time\n    };\n    setAppointment(prev => [...appointment, value]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contactsFunc: newContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointmentFunc: newAppointment,\n        contacts: contacts,\n        appointment: appointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"59VwBIlGBlbVePPf7T9HWMHErQk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointment","setAppointment","newContact","name","phoneNumber","email","value","prev","newAppointment","contact","date","time","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","contactsFunc","APPOINTMENTS","appointmentFunc","_c","$RefreshReg$"],"sources":["G:/Web dev projects/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  RouterProvider,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointment, setAppointment] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const newContact = (name, phoneNumber, email) => {\r\n    const value = { name, phoneNumber, email };\r\n    setContacts((prev) => [...contacts, value]);\r\n  };\r\n\r\n  const newAppointment = (name, contact, date, time) => {\r\n    const value = { name, contact, date, time };\r\n    setAppointment((prev) => [...appointment, value]);\r\n  };\r\n\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <Route\r\n        path=\"/\"\r\n        element={<Root />}\r\n      >\r\n        <Route\r\n          index\r\n          element={\r\n            <Navigate\r\n              to={ROUTES.CONTACTS}\r\n              replace\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={\r\n            <ContactsPage\r\n              contactsFunc={newContact}\r\n              \r\n            /> /* Add props to ContactsPage */\r\n          }\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={\r\n            <AppointmentsPage\r\n              appointmentFunc={newAppointment}\r\n              contacts={contacts}\r\n              appointment={appointment}\r\n            /> /* Add props to AppointmentsPage */\r\n          }\r\n        />\r\n      </Route>\r\n    )\r\n  );\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}